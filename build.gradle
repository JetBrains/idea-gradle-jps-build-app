buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url 'http://dl.bintray.com/jetbrains/intellij-plugin-service'
        }
    }
    dependencies {
        classpath "org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.5.0-SNAPSHOT"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
}

apply plugin: 'org.jetbrains.intellij'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://www.jetbrains.com/intellij-repository/snapshots'
    }
}

dependencies {
    compile 'org.reflections:reflections:0.9.11'
}

intellij {
    def ideVersion = System.getenv("ide_version")
    if (ideVersion == null) {
      ideVersion = 'IC-2020.1.2'
    } else {
      println("Using IDE: $ideVersion")
    }
    version ideVersion

    def idePluginsList = System.getenv("ide_plugins")
    if (idePluginsList == null) {
      idePluginsList = 'java,gradle,org.jetbrains.kotlin:1.3.72-release-IJ2020.1-1'
    } else {
      println("Installing the following plugins: $idePluginsList")
    }

    plugins = idePluginsList.split(',')
    pluginName 'gradle-integration-testing-plugin'
    sandboxDirectory = "$project.rootDir/local"
}

tasks.getByName('runIde') {
    def workingDir = System.getenv("working_dir")
    if (workingDir == null) {
        workingDir = "../jps"
    }
    def testName = System.getenv("test_name")
    if (testName == null) {
        testName = 'JpsImportAndBuild'
    }
    def heapSize = System.getenv("idea_heap_size")
    if (heapSize == null) {
        heapSize = '2G'
    }
    def absoluteWorkingDir = new File(workingDir).getCanonicalFile().getAbsolutePath().toString()
    println("Executing test [$testName] in folder [$absoluteWorkingDir]")
    systemProperties = ['java.awt.headless': 'true', 'projectPath': absoluteWorkingDir, 'jdkPath': System.getenv('JDK_18')]
    args = ['runIntegrationTest', testName]
    
    maxHeapSize = heapSize

    if ("true" == System.getenv("enable_serial_gc")) {
        jvmArgs = ['-XX:+UseSerialGC', '-XX:MinHeapFreeRatio=1', '-XX:MaxHeapFreeRatio=99']
    }

    jbrVersion = '8u202b1483.24'
}

group 'org.jetbrains'
version '0.1'

