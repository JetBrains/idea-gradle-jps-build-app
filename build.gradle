plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'org.jetbrains.intellij' version '1.5.3'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://www.jetbrains.com/intellij-repository/snapshots'
    }
}

dependencies {
    implementation 'org.reflections:reflections:0.9.11'
}

intellij {
    def ideVersion = System.getenv("ide_version")
    if (ideVersion == null) {
        ideVersion = 'IC-2021.2.3'
    }

    def idePluginsList = System.getenv("ide_plugins")
    if (idePluginsList == null) {
        idePluginsList = 'java,gradle,org.jetbrains.kotlin'
    } else {
        println("Installing the following plugins: $idePluginsList")
    }

    plugins = Arrays.asList(idePluginsList.split(','))
    pluginName = 'gradle-integration-testing-plugin'

    def localIdeaPath = System.getenv("localIdeaPath")
    if (localIdeaPath != null) {
        println("Using IDE from $localIdeaPath")
        localPath = localIdeaPath
    } else {
        println("Using IDE: $ideVersion")
        version = ideVersion
    }

    def customIntellijRepo = System.getenv("intellijRepo")
    if (customIntellijRepo != null) {
        intellijRepository = customIntellijRepo
    }

    sandboxDir = "$project.rootDir/local"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions.freeCompilerArgs += ["-Xskip-metadata-version-check"]
}

tasks.named('runIde').configure {
    def workingDir = System.getenv("working_dir")
    if (workingDir == null) {
        workingDir = "../kotlin"
    }
    def testName = System.getenv("test_name")
    if (testName == null) {
        testName = 'MeasureModelBuildersStatistics'
    }
    def heapSize = System.getenv("idea_heap_size")
    if (heapSize == null) {
        heapSize = '2G'
    }
    def absoluteWorkingDir = project.file(workingDir).getCanonicalFile().getAbsolutePath().toString()
    println("Executing test [$testName] in folder [$absoluteWorkingDir]")
    systemProperties = ['java.awt.headless': 'true', 'projectPath': absoluteWorkingDir, 'jdkPath': System.getenv('JDK_PATH')]
    if (project.hasProperty('metricsSuffix') && testName == 'MeasureModelBuildersStatistics') {
        println("Metrics suffix [$metricsSuffix]")
        args = ['runIntegrationTest', testName, metricsSuffix]
    } else {
        args = ['runIntegrationTest', testName]
    }

    maxHeapSize = heapSize

    if ("true" == System.getenv("enable_serial_gc")) {
        jvmArgs = ['-XX:+UseSerialGC', '-XX:MinHeapFreeRatio=1', '-XX:MaxHeapFreeRatio=99']
    }
    jvmArgs += ['--add-exports', 'java.base/jdk.internal.vm=ALL-UNNAMED']

    jbrVersion = '11_0_2b159'
}

group 'org.jetbrains'
version '0.1'

